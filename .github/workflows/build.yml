# This is a basic workflow to help you get started with Actions

name: Toolchain Build

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
    paths-ignore:
      - "**/README.md"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Checkout code base
        uses: actions/checkout@v2
        with:
          path: toolchain

      - name: Checkout richfelker/musl-cross-make
        uses: actions/checkout@v2
        with:
          repository: richfelker/musl-cross-make
          path: musl-cross-make

      - name: Config and Build
        run: |
          cd musl-cross-make || exit 1
          echo "BINUTILS_VER = 2.31.1" >> ./config.mak
          echo "GCC_VER = 8.4.0" >> ./config.mak
          echo "MUSL_VER = 1.2.1" >> ./config.mak
          echo "LINUX_VER = 3.4.10" >> ./config.mak
          #echo "LINUX_VER = headers-4.19.88" >> ./config.mak
          #echo "TARGET = aarch64-linux-musl" >> ./config.mak
          #echo "TARGET = x86_64-linux-musl" >> ./config.mak
          echo "TARGET = mipsel-linux-musl" >> ./config.mak
          echo "GCC_CONFIG += --with-float=hard --with-abi=32 --with-tune=mips32r2" >> ./config.mak
          #echo "GCC_CONFIG += --with-arch=atom" >> ./config.mak
          #echo "GCC_CONFIG += --with-cpu=cortex-a7 --with-fpu=neon-vfpv4 --with-float=hard" >> ./config.mak
          echo "GCC_CONFIG += --enable-lto --with-gnu-ld" >> ./config.mak
          cp -rf ../toolchain/patches/* patches/
          cp ../toolchain/hashes/* hashes/
          make install -j2

      - name: Pack toolchain
        run: |
          mkdir -p publish
          cd musl-cross-make || exit 1
          mv output mipsel-none-linux-musl
          tar Jcf ../publish/mipsel-none-linux-musl.tar.xz mipsel-none-linux-musl

      - name: Create a release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: mipsel-toolchain_202012031500
          release_name: mipsel-toolchain_202012031500
          draft: false
          prerelease: false

      - name: Upload toolchain
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./publish/mipsel-none-linux-musl.tar.xz
          asset_name: mipsel-none-linux-musl.tar.xz
          asset_content_type: application/octet-stream

